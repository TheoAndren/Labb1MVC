// <auto-generated />
using System;
using Labb1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Labb1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221012223111_UpdateImage")]
    partial class UpdateImage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Labb1.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Avalible")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "J.K. Rowling",
                            Avalible = false,
                            ImageUrl = "https://kbimages1-a.akamaihd.net/90aadf1a-79ea-4942-b055-2391cba20012/353/569/90/False/harry-potter-og-de-vises-sten.jpg",
                            Title = "Harry Potter och De Vises Sten"
                        },
                        new
                        {
                            BookId = 2,
                            Author = "J.K. Rowling",
                            Avalible = false,
                            ImageUrl = "https://image.bokus.com/images/9789129723960_200x_harry-potter-och-hemligheternas-kammare",
                            Title = "Harry Potter och Hemligheternas kammare"
                        },
                        new
                        {
                            BookId = 3,
                            Author = "J.K. Rowling",
                            Avalible = false,
                            ImageUrl = "https://kbimages1-a.akamaihd.net/f5e2b97b-0438-4cd5-8a47-09c26b3fb4cf/353/569/90/False/harry-potter-and-the-prisoner-of-azkaban-5.jpg",
                            Title = "Harry Potter and the Prisoner of Azkaban"
                        },
                        new
                        {
                            BookId = 4,
                            Author = "J.K. Rowling",
                            Avalible = false,
                            ImageUrl = "https://kbimages1-a.akamaihd.net/da827f3c-534e-4cdc-b1ae-103d8a8bf4c8/353/569/90/False/harry-potter-och-den-flammande-bagaren.jpg",
                            Title = "Harry Potter och den flammande bägaren"
                        });
                });

            modelBuilder.Entity("Labb1.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "theokingen@gmail.com",
                            FirstName = "Theo",
                            LastName = "Andrén"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "Anasekung123@gmail.com",
                            FirstName = "Anas",
                            LastName = "Qlok"
                        });
                });

            modelBuilder.Entity("Labb1.Models.CustomerBook", b =>
                {
                    b.Property<int>("CustomerBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CustomerBookId");

                    b.HasIndex("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerBooks");

                    b.HasData(
                        new
                        {
                            CustomerBookId = 3,
                            BookId = 2,
                            CustomerId = 2,
                            LoanDate = new DateTime(2021, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2022, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CustomerBookId = 2,
                            BookId = 2,
                            CustomerId = 1,
                            LoanDate = new DateTime(2022, 10, 13, 0, 31, 10, 810, DateTimeKind.Local).AddTicks(5872),
                            ReturnDate = new DateTime(2022, 10, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CustomerBookId = 1,
                            BookId = 1,
                            CustomerId = 1,
                            LoanDate = new DateTime(2022, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2022, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Labb1.Models.CustomerBook", b =>
                {
                    b.HasOne("Labb1.Models.Book", "Book")
                        .WithMany("CustomerBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb1.Models.Customer", "Customer")
                        .WithMany("CustomerBooks")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
